init
───────────────────────────────────────────────────────────
let squareSize = xy(64, 64)

let cursor = xy(1, 1)

let player = 1

let player2IsAI = true

let winner = 0

const colors = [#0, rgb(1.0, 0.2, 0.2), rgb(0.2, 1.0, 0.2)]

let board = [0, 0, 0,
             0, 0, 0,
             0, 0, 0]

def bAll(i0, i1, i2):
    return (board[i0] == board[i1]) and (board[i1] == board[i2])

def aiMove():
    let choice = random_integer(9)
    for 0 <= i < 9:
        let index = (choice + i) mod 9
        if board[index] == 0:
            board[index] = player
            player = 1
            return

enter(reason, player1Status, player2Status)
───────────────────────────────────────────────────────────
if player2Status == "human":
    player2IsAI = false
else:
    player2IsAI = true

frame
───────────────────────────────────────────────────────────
if winner == 0:
    cursor += xy(joy.xx, joy.yy)
    if cursor.x < 0: cursor.x = 2
    if cursor.x > 2: cursor.x = 0
    if cursor.y < 0: cursor.y = 2
    if cursor.y > 2: cursor.y = 0


let center = SCREEN_SIZE / 2
draw_line(center - squareSize * xy(1, 3) / 2, center - squareSize * xy(1, -3) / 2, #c)
draw_line(center + squareSize * xy(1, 3) / 2, center + squareSize * xy(1, -3) / 2, #c)
draw_line(center - squareSize * xy(3, 1) / 2, center - squareSize * xy(-3, 1) / 2, #c)
draw_line(center + squareSize * xy(3, 1) / 2, center + squareSize * xy(-3, 1) / 2, #c)

if winner == 0:
    draw_rect(center - squareSize + cursor * squareSize, squareSize - xy(3, 3), #0, colors[player])

    if player2IsAI and player == 2:
        aiMove()
    else if board[3cursor.y + cursor.x] == 0:
        let msg = replace(if player == 1 then "press (a) to place your X" else "press (a) to place your O", joy.prompt)
        draw_text(font, msg, xy(½ SCREEN_SIZE.x, SCREEN_SIZE.y - 10), #a, #0, #0, "center")
        if joy.pressed_a:
            board[3cursor.y + cursor.x] = player
            player = if player == 1 then 2 else 1

let popCount = 0
for 0 <= x < 3:
    for 0 <= y < 3:
        let value = board[3y + x]
        let pos = center - squareSize + xy(x, y) * squareSize
        let size = squareSize - xy(6, 6)
        if value != 0:
            popCount += 1
            if value == 1:
                draw_line(pos - size / 2, pos + size / 2, colors[value])
                draw_line(pos - size * xy(1, -1) / 2, pos + size * xy(1, -1) / 2, colors[value])
            else:
                draw_disk(pos, size.x / 2, ∅, colors[value])

for 0 <= x < 3:
    if bAll(x, x + 3, x + 6) and board[x] != 0:
        draw_line(center + squareSize * xy(x - 1, - 1), center + squareSize * xy(x - 1, 1), #f, 0, 3)
        winner = board[x]
for 0 <= y < 3:
    if bAll(3y, 3y + 1, 3y + 2) and board[3y] != 0:
        draw_line(center + squareSize * xy(-1, y - 1), center + squareSize * xy(1, y - 1), #f, 0, 3)
        winner = board[3y]
if bAll(0, 4, 8) and board[0] != 0:
    draw_line(center + squareSize * xy(-1, -1), center + squareSize * xy(1, 1), #f, 0, 3)
    winner = board[0]
if bAll(2, 4, 6) and board[2] != 0:
    draw_line(center + squareSize * xy(1, -1), center + squareSize * xy(-1, 1), #f, 0, 3)
    winner = board[2]
   
if winner == 0 and popCount == 9: set_mode(EndGame, "stalemate")

if joy.pressed_q: set_mode(EndGame, "pressed_q")
